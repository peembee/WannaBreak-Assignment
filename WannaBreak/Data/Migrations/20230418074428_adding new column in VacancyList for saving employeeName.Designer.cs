// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WannaBreak.Data;

#nullable disable

namespace WannaBreak.Migrations
{
    [DbContext(typeof(WannaBreakContext))]
    [Migration("20230418074428_adding new column in VacancyList for saving employeeName")]
    partial class addingnewcolumninVacancyListforsavingemployeeName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WannaBreak.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WannaBreak.Models.VacancyList", b =>
                {
                    b.Property<int>("VacancyListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacancyListID"));

                    b.Property<string>("EmployeeFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FK_EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("FK_VacancyTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Stop")
                        .HasColumnType("datetime2");

                    b.HasKey("VacancyListID");

                    b.HasIndex("FK_EmployeeID");

                    b.HasIndex("FK_VacancyTypeID");

                    b.ToTable("VacancyLists");
                });

            modelBuilder.Entity("WannaBreak.Models.VacancyType", b =>
                {
                    b.Property<int>("VacancyTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacancyTypeID"));

                    b.Property<string>("VacancyTitel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VacancyTypeID");

                    b.ToTable("VacancyTypes");
                });

            modelBuilder.Entity("WannaBreak.Models.VacancyList", b =>
                {
                    b.HasOne("WannaBreak.Models.Employee", "Employees")
                        .WithMany("VacancyLists")
                        .HasForeignKey("FK_EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WannaBreak.Models.VacancyType", "VacancyTypes")
                        .WithMany("VacancyLists")
                        .HasForeignKey("FK_VacancyTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("VacancyTypes");
                });

            modelBuilder.Entity("WannaBreak.Models.Employee", b =>
                {
                    b.Navigation("VacancyLists");
                });

            modelBuilder.Entity("WannaBreak.Models.VacancyType", b =>
                {
                    b.Navigation("VacancyLists");
                });
#pragma warning restore 612, 618
        }
    }
}
